{
  "/workspaces/serverless-trading-platform": {
    "versionSfCore": null,
    "versionFramework": "4.1.21",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "opt": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "adamscott",
            "app": "trading-platform",
            "service": "trading-platform",
            "provider": {
              "name": "aws",
              "runtime": "python3.8",
              "stage": "dev",
              "region": "us-east-1",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ProcessMarketDataLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/trading-platform-dev-processMarketData"
                    }
                  },
                  "ExecuteTradeStrategyLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/trading-platform-dev-executeTradeStrategy"
                    }
                  },
                  "AnalyzePerformanceLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/trading-platform-dev-analyzePerformance"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "trading-platform",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/trading-platform-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/trading-platform-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "trading-platform",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "ProcessMarketDataLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/trading-platform/dev/1723340708262-2024-08-11T01:45:08.262Z/trading-platform.zip"
                      },
                      "Handler": "src.handlers.market_data.process",
                      "Runtime": "python3.8",
                      "FunctionName": "trading-platform-dev-processMarketData",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "ProcessMarketDataLogGroup"
                    ]
                  },
                  "ExecuteTradeStrategyLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/trading-platform/dev/1723340708262-2024-08-11T01:45:08.262Z/trading-platform.zip"
                      },
                      "Handler": "src.handlers.trade.execute",
                      "Runtime": "python3.8",
                      "FunctionName": "trading-platform-dev-executeTradeStrategy",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "ExecuteTradeStrategyLogGroup"
                    ]
                  },
                  "AnalyzePerformanceLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/trading-platform/dev/1723340708262-2024-08-11T01:45:08.262Z/trading-platform.zip"
                      },
                      "Handler": "src.handlers.analysis.perform",
                      "Runtime": "python3.8",
                      "FunctionName": "trading-platform-dev-analyzePerformance",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AnalyzePerformanceLogGroup"
                    ]
                  },
                  "ProcessMarketDataLambdaVersion09sOawg2hra15sWpvdFmhJyTZlHte161cZr0U9Arb0": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ProcessMarketDataLambdaFunction"
                      },
                      "CodeSha256": "HxNlepOVLrLAuUgsZe9jsWGqk0QYtmGBjrELdZNd9CE="
                    }
                  },
                  "ExecuteTradeStrategyLambdaVersionKWST46QsjBWeIcYyl6Tfshwd6Cs8vqWfLLtEL8h6UrE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ExecuteTradeStrategyLambdaFunction"
                      },
                      "CodeSha256": "HxNlepOVLrLAuUgsZe9jsWGqk0QYtmGBjrELdZNd9CE="
                    }
                  },
                  "AnalyzePerformanceLambdaVersionDlteR2fztEEIf4NyzPmNx7sfLvA3lSYM8JEB31KCg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AnalyzePerformanceLambdaFunction"
                      },
                      "CodeSha256": "HxNlepOVLrLAuUgsZe9jsWGqk0QYtmGBjrELdZNd9CE="
                    }
                  },
                  "TradingWorkflowStepFunctionsStateMachineRole": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": {
                                "Fn::Sub": "states.${AWS::Region}.amazonaws.com"
                              }
                            },
                            "Action": "sts:AssumeRole"
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": "dev-trading-platform-statemachine",
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "lambda:InvokeFunction"
                                ],
                                "Resource": [
                                  {
                                    "Fn::GetAtt": [
                                      "ProcessMarketDataLambdaFunction",
                                      "Arn"
                                    ]
                                  },
                                  {
                                    "Fn::Sub": [
                                      "${functionArn}:*",
                                      {
                                        "functionArn": {
                                          "Fn::GetAtt": [
                                            "ProcessMarketDataLambdaFunction",
                                            "Arn"
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "Fn::GetAtt": [
                                      "ExecuteTradeStrategyLambdaFunction",
                                      "Arn"
                                    ]
                                  },
                                  {
                                    "Fn::Sub": [
                                      "${functionArn}:*",
                                      {
                                        "functionArn": {
                                          "Fn::GetAtt": [
                                            "ExecuteTradeStrategyLambdaFunction",
                                            "Arn"
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "Fn::GetAtt": [
                                      "AnalyzePerformanceLambdaFunction",
                                      "Arn"
                                    ]
                                  },
                                  {
                                    "Fn::Sub": [
                                      "${functionArn}:*",
                                      {
                                        "functionArn": {
                                          "Fn::GetAtt": [
                                            "AnalyzePerformanceLambdaFunction",
                                            "Arn"
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "TradingWorkflowStepFunctionsStateMachine": {
                    "Type": "AWS::StepFunctions::StateMachine",
                    "Properties": {
                      "DefinitionString": {
                        "Fn::Sub": [
                          "{\n  \"StartAt\": \"FetchMarketData\",\n  \"States\": {\n    \"FetchMarketData\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${bcc3523367a36d53d2294c8059de22d3}\",\n      \"Next\": \"ExecuteTradeStrategy\"\n    },\n    \"ExecuteTradeStrategy\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${2cc4e800550f0f2f2233e8ecc5d05700}\",\n      \"Next\": \"AnalyzePerformance\"\n    },\n    \"AnalyzePerformance\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${a3769abb442ae325c5658db4ccdd3681}\",\n      \"End\": true\n    }\n  }\n}",
                          {
                            "bcc3523367a36d53d2294c8059de22d3": {
                              "Fn::GetAtt": [
                                "ProcessMarketDataLambdaFunction",
                                "Arn"
                              ]
                            },
                            "2cc4e800550f0f2f2233e8ecc5d05700": {
                              "Fn::GetAtt": [
                                "ExecuteTradeStrategyLambdaFunction",
                                "Arn"
                              ]
                            },
                            "a3769abb442ae325c5658db4ccdd3681": {
                              "Fn::GetAtt": [
                                "AnalyzePerformanceLambdaFunction",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      },
                      "RoleArn": {
                        "Fn::GetAtt": [
                          "TradingWorkflowStepFunctionsStateMachineRole",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "TradingWorkflowStepFunctionsStateMachineRole"
                    ]
                  },
                  "ProcessMarketDataEventsRuleSchedule1": {
                    "Type": "AWS::Events::Rule",
                    "Properties": {
                      "ScheduleExpression": "rate(5 minutes)",
                      "State": "ENABLED",
                      "Targets": [
                        {
                          "Arn": {
                            "Fn::GetAtt": [
                              "ProcessMarketDataLambdaFunction",
                              "Arn"
                            ]
                          },
                          "Id": "processMarketDataSchedule"
                        }
                      ]
                    }
                  },
                  "ProcessMarketDataLambdaPermissionEventsRuleSchedule1": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ProcessMarketDataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "events.amazonaws.com",
                      "SourceArn": {
                        "Fn::GetAtt": [
                          "ProcessMarketDataEventsRuleSchedule1",
                          "Arn"
                        ]
                      }
                    }
                  },
                  "S3BucketTradingdatadev": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketName": "trading-data-dev",
                      "NotificationConfiguration": {
                        "LambdaConfigurations": [
                          {
                            "Event": "s3:ObjectCreated:*",
                            "Function": {
                              "Fn::GetAtt": [
                                "AnalyzePerformanceLambdaFunction",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "DependsOn": [
                      "AnalyzePerformanceLambdaPermissionTradingdatadevS3"
                    ]
                  },
                  "AnalyzePerformanceLambdaPermissionTradingdatadevS3": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AnalyzePerformanceLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "s3.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::trading-data-dev"
                          ]
                        ]
                      },
                      "SourceAccount": {
                        "Ref": "AWS::AccountId"
                      }
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-trading-platform",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceTrade": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "trade",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTradePost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTrade"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ExecuteTradeStrategyLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ExecuteTradeStrategyLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1723340657190": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodTradePost"
                    ]
                  },
                  "ExecuteTradeStrategyLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ExecuteTradeStrategyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "TradingDataBucket": {
                    "Type": "AWS::S3::Bucket",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "BucketName": "trading-data-dev"
                    }
                  },
                  "TradingDatabase": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "trading-table-dev",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "id",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "id",
                          "KeyType": "HASH"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "ProcessMarketDataLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ProcessMarketDataLambdaVersion09sOawg2hra15sWpvdFmhJyTZlHte161cZr0U9Arb0"
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-ProcessMarketDataLambdaFunctionQualifiedArn"
                    }
                  },
                  "ExecuteTradeStrategyLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ExecuteTradeStrategyLambdaVersionKWST46QsjBWeIcYyl6Tfshwd6Cs8vqWfLLtEL8h6UrE"
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-ExecuteTradeStrategyLambdaFunctionQualifiedArn"
                    }
                  },
                  "AnalyzePerformanceLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AnalyzePerformanceLambdaVersionDlteR2fztEEIf4NyzPmNx7sfLvA3lSYM8JEB31KCg"
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-AnalyzePerformanceLambdaFunctionQualifiedArn"
                    }
                  },
                  "TradingWorkflowStepFunctionsStateMachineArn": {
                    "Description": "Current StateMachine Arn",
                    "Value": {
                      "Ref": "TradingWorkflowStepFunctionsStateMachine"
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-TradingWorkflowStepFunctionsStateMachineArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "processMarketData": {
                "handler": "src.handlers.market_data.process",
                "events": [
                  {
                    "schedule": "rate(5 minutes)"
                  }
                ],
                "name": "trading-platform-dev-processMarketData",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.8",
                "vpc": {},
                "versionLogicalId": "ProcessMarketDataLambdaVersion09sOawg2hra15sWpvdFmhJyTZlHte161cZr0U9Arb0"
              },
              "executeTradeStrategy": {
                "handler": "src.handlers.trade.execute",
                "events": [
                  {
                    "http": {
                      "path": "trade",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "trading-platform-dev-executeTradeStrategy",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.8",
                "vpc": {},
                "versionLogicalId": "ExecuteTradeStrategyLambdaVersionKWST46QsjBWeIcYyl6Tfshwd6Cs8vqWfLLtEL8h6UrE"
              },
              "analyzePerformance": {
                "handler": "src.handlers.analysis.perform",
                "events": [
                  {
                    "s3": {
                      "bucket": "trading-data-dev",
                      "event": "s3:ObjectCreated:*"
                    }
                  }
                ],
                "name": "trading-platform-dev-analyzePerformance",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.8",
                "vpc": {},
                "versionLogicalId": "AnalyzePerformanceLambdaVersionDlteR2fztEEIf4NyzPmNx7sfLvA3lSYM8JEB31KCg"
              }
            },
            "resources": {
              "Resources": {
                "TradingDataBucket": {
                  "Type": "AWS::S3::Bucket",
                  "DeletionPolicy": "Retain",
                  "Properties": {
                    "BucketName": "trading-data-dev"
                  }
                },
                "TradingDatabase": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "trading-table-dev",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                }
              },
              "Outputs": {}
            },
            "plugins": [
              "serverless-python-requirements",
              "serverless-step-functions"
            ],
            "stepFunctions": {
              "stateMachines": {
                "tradingWorkflow": {
                  "definition": {
                    "StartAt": "FetchMarketData",
                    "States": {
                      "FetchMarketData": {
                        "Type": "Task",
                        "Resource": "${bcc3523367a36d53d2294c8059de22d3}",
                        "Next": "ExecuteTradeStrategy"
                      },
                      "ExecuteTradeStrategy": {
                        "Type": "Task",
                        "Resource": "${2cc4e800550f0f2f2233e8ecc5d05700}",
                        "Next": "AnalyzePerformance"
                      },
                      "AnalyzePerformance": {
                        "Type": "Task",
                        "Resource": "${a3769abb442ae325c5658db4ccdd3681}",
                        "End": true
                      }
                    }
                  }
                }
              }
            }
          },
          "configFileDirPath": "/workspaces/serverless-trading-platform",
          "config": {
            "type": "opt"
          },
          "options": {}
        },
        "resolvers": {}
      },
      "aws": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "adamscott",
            "app": "trading-platform",
            "service": "trading-platform",
            "provider": {
              "name": "aws",
              "runtime": "python3.8",
              "stage": "dev",
              "region": "us-east-1",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ProcessMarketDataLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/trading-platform-dev-processMarketData"
                    }
                  },
                  "ExecuteTradeStrategyLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/trading-platform-dev-executeTradeStrategy"
                    }
                  },
                  "AnalyzePerformanceLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/trading-platform-dev-analyzePerformance"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "trading-platform",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/trading-platform-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/trading-platform-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "trading-platform",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "ProcessMarketDataLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/trading-platform/dev/1723340708262-2024-08-11T01:45:08.262Z/trading-platform.zip"
                      },
                      "Handler": "src.handlers.market_data.process",
                      "Runtime": "python3.8",
                      "FunctionName": "trading-platform-dev-processMarketData",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "ProcessMarketDataLogGroup"
                    ]
                  },
                  "ExecuteTradeStrategyLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/trading-platform/dev/1723340708262-2024-08-11T01:45:08.262Z/trading-platform.zip"
                      },
                      "Handler": "src.handlers.trade.execute",
                      "Runtime": "python3.8",
                      "FunctionName": "trading-platform-dev-executeTradeStrategy",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "ExecuteTradeStrategyLogGroup"
                    ]
                  },
                  "AnalyzePerformanceLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/trading-platform/dev/1723340708262-2024-08-11T01:45:08.262Z/trading-platform.zip"
                      },
                      "Handler": "src.handlers.analysis.perform",
                      "Runtime": "python3.8",
                      "FunctionName": "trading-platform-dev-analyzePerformance",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AnalyzePerformanceLogGroup"
                    ]
                  },
                  "ProcessMarketDataLambdaVersion09sOawg2hra15sWpvdFmhJyTZlHte161cZr0U9Arb0": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ProcessMarketDataLambdaFunction"
                      },
                      "CodeSha256": "HxNlepOVLrLAuUgsZe9jsWGqk0QYtmGBjrELdZNd9CE="
                    }
                  },
                  "ExecuteTradeStrategyLambdaVersionKWST46QsjBWeIcYyl6Tfshwd6Cs8vqWfLLtEL8h6UrE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ExecuteTradeStrategyLambdaFunction"
                      },
                      "CodeSha256": "HxNlepOVLrLAuUgsZe9jsWGqk0QYtmGBjrELdZNd9CE="
                    }
                  },
                  "AnalyzePerformanceLambdaVersionDlteR2fztEEIf4NyzPmNx7sfLvA3lSYM8JEB31KCg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AnalyzePerformanceLambdaFunction"
                      },
                      "CodeSha256": "HxNlepOVLrLAuUgsZe9jsWGqk0QYtmGBjrELdZNd9CE="
                    }
                  },
                  "TradingWorkflowStepFunctionsStateMachineRole": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": {
                                "Fn::Sub": "states.${AWS::Region}.amazonaws.com"
                              }
                            },
                            "Action": "sts:AssumeRole"
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": "dev-trading-platform-statemachine",
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "lambda:InvokeFunction"
                                ],
                                "Resource": [
                                  {
                                    "Fn::GetAtt": [
                                      "ProcessMarketDataLambdaFunction",
                                      "Arn"
                                    ]
                                  },
                                  {
                                    "Fn::Sub": [
                                      "${functionArn}:*",
                                      {
                                        "functionArn": {
                                          "Fn::GetAtt": [
                                            "ProcessMarketDataLambdaFunction",
                                            "Arn"
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "Fn::GetAtt": [
                                      "ExecuteTradeStrategyLambdaFunction",
                                      "Arn"
                                    ]
                                  },
                                  {
                                    "Fn::Sub": [
                                      "${functionArn}:*",
                                      {
                                        "functionArn": {
                                          "Fn::GetAtt": [
                                            "ExecuteTradeStrategyLambdaFunction",
                                            "Arn"
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "Fn::GetAtt": [
                                      "AnalyzePerformanceLambdaFunction",
                                      "Arn"
                                    ]
                                  },
                                  {
                                    "Fn::Sub": [
                                      "${functionArn}:*",
                                      {
                                        "functionArn": {
                                          "Fn::GetAtt": [
                                            "AnalyzePerformanceLambdaFunction",
                                            "Arn"
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "TradingWorkflowStepFunctionsStateMachine": {
                    "Type": "AWS::StepFunctions::StateMachine",
                    "Properties": {
                      "DefinitionString": {
                        "Fn::Sub": [
                          "{\n  \"StartAt\": \"FetchMarketData\",\n  \"States\": {\n    \"FetchMarketData\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${bcc3523367a36d53d2294c8059de22d3}\",\n      \"Next\": \"ExecuteTradeStrategy\"\n    },\n    \"ExecuteTradeStrategy\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${2cc4e800550f0f2f2233e8ecc5d05700}\",\n      \"Next\": \"AnalyzePerformance\"\n    },\n    \"AnalyzePerformance\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${a3769abb442ae325c5658db4ccdd3681}\",\n      \"End\": true\n    }\n  }\n}",
                          {
                            "bcc3523367a36d53d2294c8059de22d3": {
                              "Fn::GetAtt": [
                                "ProcessMarketDataLambdaFunction",
                                "Arn"
                              ]
                            },
                            "2cc4e800550f0f2f2233e8ecc5d05700": {
                              "Fn::GetAtt": [
                                "ExecuteTradeStrategyLambdaFunction",
                                "Arn"
                              ]
                            },
                            "a3769abb442ae325c5658db4ccdd3681": {
                              "Fn::GetAtt": [
                                "AnalyzePerformanceLambdaFunction",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      },
                      "RoleArn": {
                        "Fn::GetAtt": [
                          "TradingWorkflowStepFunctionsStateMachineRole",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "TradingWorkflowStepFunctionsStateMachineRole"
                    ]
                  },
                  "ProcessMarketDataEventsRuleSchedule1": {
                    "Type": "AWS::Events::Rule",
                    "Properties": {
                      "ScheduleExpression": "rate(5 minutes)",
                      "State": "ENABLED",
                      "Targets": [
                        {
                          "Arn": {
                            "Fn::GetAtt": [
                              "ProcessMarketDataLambdaFunction",
                              "Arn"
                            ]
                          },
                          "Id": "processMarketDataSchedule"
                        }
                      ]
                    }
                  },
                  "ProcessMarketDataLambdaPermissionEventsRuleSchedule1": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ProcessMarketDataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "events.amazonaws.com",
                      "SourceArn": {
                        "Fn::GetAtt": [
                          "ProcessMarketDataEventsRuleSchedule1",
                          "Arn"
                        ]
                      }
                    }
                  },
                  "S3BucketTradingdatadev": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketName": "trading-data-dev",
                      "NotificationConfiguration": {
                        "LambdaConfigurations": [
                          {
                            "Event": "s3:ObjectCreated:*",
                            "Function": {
                              "Fn::GetAtt": [
                                "AnalyzePerformanceLambdaFunction",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "DependsOn": [
                      "AnalyzePerformanceLambdaPermissionTradingdatadevS3"
                    ]
                  },
                  "AnalyzePerformanceLambdaPermissionTradingdatadevS3": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AnalyzePerformanceLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "s3.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::trading-data-dev"
                          ]
                        ]
                      },
                      "SourceAccount": {
                        "Ref": "AWS::AccountId"
                      }
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-trading-platform",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceTrade": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "trade",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTradePost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTrade"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ExecuteTradeStrategyLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ExecuteTradeStrategyLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1723340657190": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodTradePost"
                    ]
                  },
                  "ExecuteTradeStrategyLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ExecuteTradeStrategyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "TradingDataBucket": {
                    "Type": "AWS::S3::Bucket",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "BucketName": "trading-data-dev"
                    }
                  },
                  "TradingDatabase": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "trading-table-dev",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "id",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "id",
                          "KeyType": "HASH"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "ProcessMarketDataLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ProcessMarketDataLambdaVersion09sOawg2hra15sWpvdFmhJyTZlHte161cZr0U9Arb0"
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-ProcessMarketDataLambdaFunctionQualifiedArn"
                    }
                  },
                  "ExecuteTradeStrategyLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ExecuteTradeStrategyLambdaVersionKWST46QsjBWeIcYyl6Tfshwd6Cs8vqWfLLtEL8h6UrE"
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-ExecuteTradeStrategyLambdaFunctionQualifiedArn"
                    }
                  },
                  "AnalyzePerformanceLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AnalyzePerformanceLambdaVersionDlteR2fztEEIf4NyzPmNx7sfLvA3lSYM8JEB31KCg"
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-AnalyzePerformanceLambdaFunctionQualifiedArn"
                    }
                  },
                  "TradingWorkflowStepFunctionsStateMachineArn": {
                    "Description": "Current StateMachine Arn",
                    "Value": {
                      "Ref": "TradingWorkflowStepFunctionsStateMachine"
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-TradingWorkflowStepFunctionsStateMachineArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "processMarketData": {
                "handler": "src.handlers.market_data.process",
                "events": [
                  {
                    "schedule": "rate(5 minutes)"
                  }
                ],
                "name": "trading-platform-dev-processMarketData",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.8",
                "vpc": {},
                "versionLogicalId": "ProcessMarketDataLambdaVersion09sOawg2hra15sWpvdFmhJyTZlHte161cZr0U9Arb0"
              },
              "executeTradeStrategy": {
                "handler": "src.handlers.trade.execute",
                "events": [
                  {
                    "http": {
                      "path": "trade",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "trading-platform-dev-executeTradeStrategy",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.8",
                "vpc": {},
                "versionLogicalId": "ExecuteTradeStrategyLambdaVersionKWST46QsjBWeIcYyl6Tfshwd6Cs8vqWfLLtEL8h6UrE"
              },
              "analyzePerformance": {
                "handler": "src.handlers.analysis.perform",
                "events": [
                  {
                    "s3": {
                      "bucket": "trading-data-dev",
                      "event": "s3:ObjectCreated:*"
                    }
                  }
                ],
                "name": "trading-platform-dev-analyzePerformance",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.8",
                "vpc": {},
                "versionLogicalId": "AnalyzePerformanceLambdaVersionDlteR2fztEEIf4NyzPmNx7sfLvA3lSYM8JEB31KCg"
              }
            },
            "resources": {
              "Resources": {
                "TradingDataBucket": {
                  "Type": "AWS::S3::Bucket",
                  "DeletionPolicy": "Retain",
                  "Properties": {
                    "BucketName": "trading-data-dev"
                  }
                },
                "TradingDatabase": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "trading-table-dev",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                }
              },
              "Outputs": {}
            },
            "plugins": [
              "serverless-python-requirements",
              "serverless-step-functions"
            ],
            "stepFunctions": {
              "stateMachines": {
                "tradingWorkflow": {
                  "definition": {
                    "StartAt": "FetchMarketData",
                    "States": {
                      "FetchMarketData": {
                        "Type": "Task",
                        "Resource": "${bcc3523367a36d53d2294c8059de22d3}",
                        "Next": "ExecuteTradeStrategy"
                      },
                      "ExecuteTradeStrategy": {
                        "Type": "Task",
                        "Resource": "${2cc4e800550f0f2f2233e8ecc5d05700}",
                        "Next": "AnalyzePerformance"
                      },
                      "AnalyzePerformance": {
                        "Type": "Task",
                        "Resource": "${a3769abb442ae325c5658db4ccdd3681}",
                        "End": true
                      }
                    }
                  }
                }
              }
            }
          },
          "configFileDirPath": "/workspaces/serverless-trading-platform",
          "config": {
            "type": "aws"
          },
          "options": {},
          "stage": "dev",
          "dashboard": {
            "aws": {
              "accessKeyId": "<REDACTED>",
              "secretAccessKey": "<REDACTED>",
              "sessionToken": "<REDACTED>"
            },
            "params": null,
            "accessKey": "<REDACTED>"
          },
          "isDefaultConfig": true
        },
        "resolvers": {}
      },
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "adamscott",
            "app": "trading-platform",
            "service": "trading-platform",
            "provider": {
              "name": "aws",
              "runtime": "python3.8",
              "stage": "dev",
              "region": "us-east-1",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ProcessMarketDataLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/trading-platform-dev-processMarketData"
                    }
                  },
                  "ExecuteTradeStrategyLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/trading-platform-dev-executeTradeStrategy"
                    }
                  },
                  "AnalyzePerformanceLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/trading-platform-dev-analyzePerformance"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "trading-platform",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/trading-platform-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/trading-platform-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "trading-platform",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "ProcessMarketDataLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/trading-platform/dev/1723340708262-2024-08-11T01:45:08.262Z/trading-platform.zip"
                      },
                      "Handler": "src.handlers.market_data.process",
                      "Runtime": "python3.8",
                      "FunctionName": "trading-platform-dev-processMarketData",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "ProcessMarketDataLogGroup"
                    ]
                  },
                  "ExecuteTradeStrategyLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/trading-platform/dev/1723340708262-2024-08-11T01:45:08.262Z/trading-platform.zip"
                      },
                      "Handler": "src.handlers.trade.execute",
                      "Runtime": "python3.8",
                      "FunctionName": "trading-platform-dev-executeTradeStrategy",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "ExecuteTradeStrategyLogGroup"
                    ]
                  },
                  "AnalyzePerformanceLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/trading-platform/dev/1723340708262-2024-08-11T01:45:08.262Z/trading-platform.zip"
                      },
                      "Handler": "src.handlers.analysis.perform",
                      "Runtime": "python3.8",
                      "FunctionName": "trading-platform-dev-analyzePerformance",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AnalyzePerformanceLogGroup"
                    ]
                  },
                  "ProcessMarketDataLambdaVersion09sOawg2hra15sWpvdFmhJyTZlHte161cZr0U9Arb0": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ProcessMarketDataLambdaFunction"
                      },
                      "CodeSha256": "HxNlepOVLrLAuUgsZe9jsWGqk0QYtmGBjrELdZNd9CE="
                    }
                  },
                  "ExecuteTradeStrategyLambdaVersionKWST46QsjBWeIcYyl6Tfshwd6Cs8vqWfLLtEL8h6UrE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ExecuteTradeStrategyLambdaFunction"
                      },
                      "CodeSha256": "HxNlepOVLrLAuUgsZe9jsWGqk0QYtmGBjrELdZNd9CE="
                    }
                  },
                  "AnalyzePerformanceLambdaVersionDlteR2fztEEIf4NyzPmNx7sfLvA3lSYM8JEB31KCg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AnalyzePerformanceLambdaFunction"
                      },
                      "CodeSha256": "HxNlepOVLrLAuUgsZe9jsWGqk0QYtmGBjrELdZNd9CE="
                    }
                  },
                  "TradingWorkflowStepFunctionsStateMachineRole": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": {
                                "Fn::Sub": "states.${AWS::Region}.amazonaws.com"
                              }
                            },
                            "Action": "sts:AssumeRole"
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": "dev-trading-platform-statemachine",
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "lambda:InvokeFunction"
                                ],
                                "Resource": [
                                  {
                                    "Fn::GetAtt": [
                                      "ProcessMarketDataLambdaFunction",
                                      "Arn"
                                    ]
                                  },
                                  {
                                    "Fn::Sub": [
                                      "${functionArn}:*",
                                      {
                                        "functionArn": {
                                          "Fn::GetAtt": [
                                            "ProcessMarketDataLambdaFunction",
                                            "Arn"
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "Fn::GetAtt": [
                                      "ExecuteTradeStrategyLambdaFunction",
                                      "Arn"
                                    ]
                                  },
                                  {
                                    "Fn::Sub": [
                                      "${functionArn}:*",
                                      {
                                        "functionArn": {
                                          "Fn::GetAtt": [
                                            "ExecuteTradeStrategyLambdaFunction",
                                            "Arn"
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "Fn::GetAtt": [
                                      "AnalyzePerformanceLambdaFunction",
                                      "Arn"
                                    ]
                                  },
                                  {
                                    "Fn::Sub": [
                                      "${functionArn}:*",
                                      {
                                        "functionArn": {
                                          "Fn::GetAtt": [
                                            "AnalyzePerformanceLambdaFunction",
                                            "Arn"
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "TradingWorkflowStepFunctionsStateMachine": {
                    "Type": "AWS::StepFunctions::StateMachine",
                    "Properties": {
                      "DefinitionString": {
                        "Fn::Sub": [
                          "{\n  \"StartAt\": \"FetchMarketData\",\n  \"States\": {\n    \"FetchMarketData\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${bcc3523367a36d53d2294c8059de22d3}\",\n      \"Next\": \"ExecuteTradeStrategy\"\n    },\n    \"ExecuteTradeStrategy\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${2cc4e800550f0f2f2233e8ecc5d05700}\",\n      \"Next\": \"AnalyzePerformance\"\n    },\n    \"AnalyzePerformance\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${a3769abb442ae325c5658db4ccdd3681}\",\n      \"End\": true\n    }\n  }\n}",
                          {
                            "bcc3523367a36d53d2294c8059de22d3": {
                              "Fn::GetAtt": [
                                "ProcessMarketDataLambdaFunction",
                                "Arn"
                              ]
                            },
                            "2cc4e800550f0f2f2233e8ecc5d05700": {
                              "Fn::GetAtt": [
                                "ExecuteTradeStrategyLambdaFunction",
                                "Arn"
                              ]
                            },
                            "a3769abb442ae325c5658db4ccdd3681": {
                              "Fn::GetAtt": [
                                "AnalyzePerformanceLambdaFunction",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      },
                      "RoleArn": {
                        "Fn::GetAtt": [
                          "TradingWorkflowStepFunctionsStateMachineRole",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "TradingWorkflowStepFunctionsStateMachineRole"
                    ]
                  },
                  "ProcessMarketDataEventsRuleSchedule1": {
                    "Type": "AWS::Events::Rule",
                    "Properties": {
                      "ScheduleExpression": "rate(5 minutes)",
                      "State": "ENABLED",
                      "Targets": [
                        {
                          "Arn": {
                            "Fn::GetAtt": [
                              "ProcessMarketDataLambdaFunction",
                              "Arn"
                            ]
                          },
                          "Id": "processMarketDataSchedule"
                        }
                      ]
                    }
                  },
                  "ProcessMarketDataLambdaPermissionEventsRuleSchedule1": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ProcessMarketDataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "events.amazonaws.com",
                      "SourceArn": {
                        "Fn::GetAtt": [
                          "ProcessMarketDataEventsRuleSchedule1",
                          "Arn"
                        ]
                      }
                    }
                  },
                  "S3BucketTradingdatadev": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketName": "trading-data-dev",
                      "NotificationConfiguration": {
                        "LambdaConfigurations": [
                          {
                            "Event": "s3:ObjectCreated:*",
                            "Function": {
                              "Fn::GetAtt": [
                                "AnalyzePerformanceLambdaFunction",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "DependsOn": [
                      "AnalyzePerformanceLambdaPermissionTradingdatadevS3"
                    ]
                  },
                  "AnalyzePerformanceLambdaPermissionTradingdatadevS3": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AnalyzePerformanceLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "s3.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::trading-data-dev"
                          ]
                        ]
                      },
                      "SourceAccount": {
                        "Ref": "AWS::AccountId"
                      }
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-trading-platform",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceTrade": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "trade",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTradePost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTrade"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ExecuteTradeStrategyLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ExecuteTradeStrategyLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1723340657190": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodTradePost"
                    ]
                  },
                  "ExecuteTradeStrategyLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ExecuteTradeStrategyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "TradingDataBucket": {
                    "Type": "AWS::S3::Bucket",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "BucketName": "trading-data-dev"
                    }
                  },
                  "TradingDatabase": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "trading-table-dev",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "id",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "id",
                          "KeyType": "HASH"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "ProcessMarketDataLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ProcessMarketDataLambdaVersion09sOawg2hra15sWpvdFmhJyTZlHte161cZr0U9Arb0"
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-ProcessMarketDataLambdaFunctionQualifiedArn"
                    }
                  },
                  "ExecuteTradeStrategyLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ExecuteTradeStrategyLambdaVersionKWST46QsjBWeIcYyl6Tfshwd6Cs8vqWfLLtEL8h6UrE"
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-ExecuteTradeStrategyLambdaFunctionQualifiedArn"
                    }
                  },
                  "AnalyzePerformanceLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AnalyzePerformanceLambdaVersionDlteR2fztEEIf4NyzPmNx7sfLvA3lSYM8JEB31KCg"
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-AnalyzePerformanceLambdaFunctionQualifiedArn"
                    }
                  },
                  "TradingWorkflowStepFunctionsStateMachineArn": {
                    "Description": "Current StateMachine Arn",
                    "Value": {
                      "Ref": "TradingWorkflowStepFunctionsStateMachine"
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-TradingWorkflowStepFunctionsStateMachineArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-trading-platform-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "processMarketData": {
                "handler": "src.handlers.market_data.process",
                "events": [
                  {
                    "schedule": "rate(5 minutes)"
                  }
                ],
                "name": "trading-platform-dev-processMarketData",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.8",
                "vpc": {},
                "versionLogicalId": "ProcessMarketDataLambdaVersion09sOawg2hra15sWpvdFmhJyTZlHte161cZr0U9Arb0"
              },
              "executeTradeStrategy": {
                "handler": "src.handlers.trade.execute",
                "events": [
                  {
                    "http": {
                      "path": "trade",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "trading-platform-dev-executeTradeStrategy",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.8",
                "vpc": {},
                "versionLogicalId": "ExecuteTradeStrategyLambdaVersionKWST46QsjBWeIcYyl6Tfshwd6Cs8vqWfLLtEL8h6UrE"
              },
              "analyzePerformance": {
                "handler": "src.handlers.analysis.perform",
                "events": [
                  {
                    "s3": {
                      "bucket": "trading-data-dev",
                      "event": "s3:ObjectCreated:*"
                    }
                  }
                ],
                "name": "trading-platform-dev-analyzePerformance",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.8",
                "vpc": {},
                "versionLogicalId": "AnalyzePerformanceLambdaVersionDlteR2fztEEIf4NyzPmNx7sfLvA3lSYM8JEB31KCg"
              }
            },
            "resources": {
              "Resources": {
                "TradingDataBucket": {
                  "Type": "AWS::S3::Bucket",
                  "DeletionPolicy": "Retain",
                  "Properties": {
                    "BucketName": "trading-data-dev"
                  }
                },
                "TradingDatabase": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "trading-table-dev",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                }
              },
              "Outputs": {}
            },
            "plugins": [
              "serverless-python-requirements",
              "serverless-step-functions"
            ],
            "stepFunctions": {
              "stateMachines": {
                "tradingWorkflow": {
                  "definition": {
                    "StartAt": "FetchMarketData",
                    "States": {
                      "FetchMarketData": {
                        "Type": "Task",
                        "Resource": "${bcc3523367a36d53d2294c8059de22d3}",
                        "Next": "ExecuteTradeStrategy"
                      },
                      "ExecuteTradeStrategy": {
                        "Type": "Task",
                        "Resource": "${2cc4e800550f0f2f2233e8ecc5d05700}",
                        "Next": "AnalyzePerformance"
                      },
                      "AnalyzePerformance": {
                        "Type": "Task",
                        "Resource": "${a3769abb442ae325c5658db4ccdd3681}",
                        "End": true
                      }
                    }
                  }
                }
              }
            }
          },
          "configFileDirPath": "/workspaces/serverless-trading-platform",
          "config": {
            "type": "self"
          },
          "options": {},
          "stage": "dev",
          "dashboard": {
            "aws": {
              "accessKeyId": "<REDACTED>",
              "secretAccessKey": "<REDACTED>",
              "sessionToken": "<REDACTED>"
            },
            "params": null,
            "accessKey": "<REDACTED>"
          }
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "/workspaces/serverless-trading-platform",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "adamscott",
      "app": "trading-platform",
      "service": "trading-platform",
      "provider": {
        "name": "aws",
        "runtime": "python3.8",
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "ProcessMarketDataLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/trading-platform-dev-processMarketData"
              }
            },
            "ExecuteTradeStrategyLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/trading-platform-dev-executeTradeStrategy"
              }
            },
            "AnalyzePerformanceLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/trading-platform-dev-analyzePerformance"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "trading-platform",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/trading-platform-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/trading-platform-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "trading-platform",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "ProcessMarketDataLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/trading-platform/dev/1723340708262-2024-08-11T01:45:08.262Z/trading-platform.zip"
                },
                "Handler": "src.handlers.market_data.process",
                "Runtime": "python3.8",
                "FunctionName": "trading-platform-dev-processMarketData",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ProcessMarketDataLogGroup"
              ]
            },
            "ExecuteTradeStrategyLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/trading-platform/dev/1723340708262-2024-08-11T01:45:08.262Z/trading-platform.zip"
                },
                "Handler": "src.handlers.trade.execute",
                "Runtime": "python3.8",
                "FunctionName": "trading-platform-dev-executeTradeStrategy",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ExecuteTradeStrategyLogGroup"
              ]
            },
            "AnalyzePerformanceLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/trading-platform/dev/1723340708262-2024-08-11T01:45:08.262Z/trading-platform.zip"
                },
                "Handler": "src.handlers.analysis.perform",
                "Runtime": "python3.8",
                "FunctionName": "trading-platform-dev-analyzePerformance",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "AnalyzePerformanceLogGroup"
              ]
            },
            "ProcessMarketDataLambdaVersion09sOawg2hra15sWpvdFmhJyTZlHte161cZr0U9Arb0": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ProcessMarketDataLambdaFunction"
                },
                "CodeSha256": "HxNlepOVLrLAuUgsZe9jsWGqk0QYtmGBjrELdZNd9CE="
              }
            },
            "ExecuteTradeStrategyLambdaVersionKWST46QsjBWeIcYyl6Tfshwd6Cs8vqWfLLtEL8h6UrE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ExecuteTradeStrategyLambdaFunction"
                },
                "CodeSha256": "HxNlepOVLrLAuUgsZe9jsWGqk0QYtmGBjrELdZNd9CE="
              }
            },
            "AnalyzePerformanceLambdaVersionDlteR2fztEEIf4NyzPmNx7sfLvA3lSYM8JEB31KCg": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AnalyzePerformanceLambdaFunction"
                },
                "CodeSha256": "HxNlepOVLrLAuUgsZe9jsWGqk0QYtmGBjrELdZNd9CE="
              }
            },
            "TradingWorkflowStepFunctionsStateMachineRole": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": {
                          "Fn::Sub": "states.${AWS::Region}.amazonaws.com"
                        }
                      },
                      "Action": "sts:AssumeRole"
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": "dev-trading-platform-statemachine",
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "lambda:InvokeFunction"
                          ],
                          "Resource": [
                            {
                              "Fn::GetAtt": [
                                "ProcessMarketDataLambdaFunction",
                                "Arn"
                              ]
                            },
                            {
                              "Fn::Sub": [
                                "${functionArn}:*",
                                {
                                  "functionArn": {
                                    "Fn::GetAtt": [
                                      "ProcessMarketDataLambdaFunction",
                                      "Arn"
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "Fn::GetAtt": [
                                "ExecuteTradeStrategyLambdaFunction",
                                "Arn"
                              ]
                            },
                            {
                              "Fn::Sub": [
                                "${functionArn}:*",
                                {
                                  "functionArn": {
                                    "Fn::GetAtt": [
                                      "ExecuteTradeStrategyLambdaFunction",
                                      "Arn"
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "Fn::GetAtt": [
                                "AnalyzePerformanceLambdaFunction",
                                "Arn"
                              ]
                            },
                            {
                              "Fn::Sub": [
                                "${functionArn}:*",
                                {
                                  "functionArn": {
                                    "Fn::GetAtt": [
                                      "AnalyzePerformanceLambdaFunction",
                                      "Arn"
                                    ]
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "TradingWorkflowStepFunctionsStateMachine": {
              "Type": "AWS::StepFunctions::StateMachine",
              "Properties": {
                "DefinitionString": {
                  "Fn::Sub": [
                    "{\n  \"StartAt\": \"FetchMarketData\",\n  \"States\": {\n    \"FetchMarketData\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${bcc3523367a36d53d2294c8059de22d3}\",\n      \"Next\": \"ExecuteTradeStrategy\"\n    },\n    \"ExecuteTradeStrategy\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${2cc4e800550f0f2f2233e8ecc5d05700}\",\n      \"Next\": \"AnalyzePerformance\"\n    },\n    \"AnalyzePerformance\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${a3769abb442ae325c5658db4ccdd3681}\",\n      \"End\": true\n    }\n  }\n}",
                    {
                      "bcc3523367a36d53d2294c8059de22d3": {
                        "Fn::GetAtt": [
                          "ProcessMarketDataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "2cc4e800550f0f2f2233e8ecc5d05700": {
                        "Fn::GetAtt": [
                          "ExecuteTradeStrategyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "a3769abb442ae325c5658db4ccdd3681": {
                        "Fn::GetAtt": [
                          "AnalyzePerformanceLambdaFunction",
                          "Arn"
                        ]
                      }
                    }
                  ]
                },
                "RoleArn": {
                  "Fn::GetAtt": [
                    "TradingWorkflowStepFunctionsStateMachineRole",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "TradingWorkflowStepFunctionsStateMachineRole"
              ]
            },
            "ProcessMarketDataEventsRuleSchedule1": {
              "Type": "AWS::Events::Rule",
              "Properties": {
                "ScheduleExpression": "rate(5 minutes)",
                "State": "ENABLED",
                "Targets": [
                  {
                    "Arn": {
                      "Fn::GetAtt": [
                        "ProcessMarketDataLambdaFunction",
                        "Arn"
                      ]
                    },
                    "Id": "processMarketDataSchedule"
                  }
                ]
              }
            },
            "ProcessMarketDataLambdaPermissionEventsRuleSchedule1": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ProcessMarketDataLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                  "Fn::GetAtt": [
                    "ProcessMarketDataEventsRuleSchedule1",
                    "Arn"
                  ]
                }
              }
            },
            "S3BucketTradingdatadev": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketName": "trading-data-dev",
                "NotificationConfiguration": {
                  "LambdaConfigurations": [
                    {
                      "Event": "s3:ObjectCreated:*",
                      "Function": {
                        "Fn::GetAtt": [
                          "AnalyzePerformanceLambdaFunction",
                          "Arn"
                        ]
                      }
                    }
                  ]
                }
              },
              "DependsOn": [
                "AnalyzePerformanceLambdaPermissionTradingdatadevS3"
              ]
            },
            "AnalyzePerformanceLambdaPermissionTradingdatadevS3": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AnalyzePerformanceLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "s3.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::trading-data-dev"
                    ]
                  ]
                },
                "SourceAccount": {
                  "Ref": "AWS::AccountId"
                }
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-trading-platform",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceTrade": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "trade",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodTradePost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTrade"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ExecuteTradeStrategyLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ExecuteTradeStrategyLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1723340657190": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodTradePost"
              ]
            },
            "ExecuteTradeStrategyLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ExecuteTradeStrategyLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "TradingDataBucket": {
              "Type": "AWS::S3::Bucket",
              "DeletionPolicy": "Retain",
              "Properties": {
                "BucketName": "trading-data-dev"
              }
            },
            "TradingDatabase": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "trading-table-dev",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-trading-platform-dev-ServerlessDeploymentBucketName"
              }
            },
            "ProcessMarketDataLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ProcessMarketDataLambdaVersion09sOawg2hra15sWpvdFmhJyTZlHte161cZr0U9Arb0"
              },
              "Export": {
                "Name": "sls-trading-platform-dev-ProcessMarketDataLambdaFunctionQualifiedArn"
              }
            },
            "ExecuteTradeStrategyLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ExecuteTradeStrategyLambdaVersionKWST46QsjBWeIcYyl6Tfshwd6Cs8vqWfLLtEL8h6UrE"
              },
              "Export": {
                "Name": "sls-trading-platform-dev-ExecuteTradeStrategyLambdaFunctionQualifiedArn"
              }
            },
            "AnalyzePerformanceLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AnalyzePerformanceLambdaVersionDlteR2fztEEIf4NyzPmNx7sfLvA3lSYM8JEB31KCg"
              },
              "Export": {
                "Name": "sls-trading-platform-dev-AnalyzePerformanceLambdaFunctionQualifiedArn"
              }
            },
            "TradingWorkflowStepFunctionsStateMachineArn": {
              "Description": "Current StateMachine Arn",
              "Value": {
                "Ref": "TradingWorkflowStepFunctionsStateMachine"
              },
              "Export": {
                "Name": "sls-trading-platform-dev-TradingWorkflowStepFunctionsStateMachineArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-trading-platform-dev-ServiceEndpoint"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "processMarketData": {
          "handler": "src.handlers.market_data.process",
          "events": [
            {
              "schedule": "rate(5 minutes)"
            }
          ],
          "name": "trading-platform-dev-processMarketData",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "ProcessMarketDataLambdaVersion09sOawg2hra15sWpvdFmhJyTZlHte161cZr0U9Arb0"
        },
        "executeTradeStrategy": {
          "handler": "src.handlers.trade.execute",
          "events": [
            {
              "http": {
                "path": "trade",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "trading-platform-dev-executeTradeStrategy",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "ExecuteTradeStrategyLambdaVersionKWST46QsjBWeIcYyl6Tfshwd6Cs8vqWfLLtEL8h6UrE"
        },
        "analyzePerformance": {
          "handler": "src.handlers.analysis.perform",
          "events": [
            {
              "s3": {
                "bucket": "trading-data-dev",
                "event": "s3:ObjectCreated:*"
              }
            }
          ],
          "name": "trading-platform-dev-analyzePerformance",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "AnalyzePerformanceLambdaVersionDlteR2fztEEIf4NyzPmNx7sfLvA3lSYM8JEB31KCg"
        }
      },
      "resources": {
        "Resources": {
          "TradingDataBucket": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
              "BucketName": "trading-data-dev"
            }
          },
          "TradingDatabase": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "trading-table-dev",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {}
      },
      "plugins": [
        "serverless-python-requirements",
        "serverless-step-functions"
      ],
      "stepFunctions": {
        "stateMachines": {
          "tradingWorkflow": {
            "definition": {
              "StartAt": "FetchMarketData",
              "States": {
                "FetchMarketData": {
                  "Type": "Task",
                  "Resource": "${bcc3523367a36d53d2294c8059de22d3}",
                  "Next": "ExecuteTradeStrategy"
                },
                "ExecuteTradeStrategy": {
                  "Type": "Task",
                  "Resource": "${2cc4e800550f0f2f2233e8ecc5d05700}",
                  "Next": "AnalyzePerformance"
                },
                "AnalyzePerformance": {
                  "Type": "Task",
                  "Resource": "${a3769abb442ae325c5658db4ccdd3681}",
                  "End": true
                }
              }
            }
          }
        }
      }
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: adamscott\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\napp: trading-platform\nservice: trading-platform\n\nprovider:\n  name: aws\n  runtime: python3.8\n  stage: ${opt:stage, 'dev'}\n  region: ${opt:region, 'us-east-1'}\n\nfunctions:\n  processMarketData:\n    handler: src.handlers.market_data.process\n    events:\n      - schedule: rate(5 minutes)\n\n  executeTradeStrategy:\n    handler: src.handlers.trade.execute\n    events:\n      - http:\n          path: trade\n          method: post\n\n  analyzePerformance:\n    handler: src.handlers.analysis.perform\n    events:\n      - s3:\n          bucket: trading-data-${self:provider.stage}\n          event: s3:ObjectCreated:*\n\nresources:\n  Resources:\n    TradingDataBucket:\n      Type: AWS::S3::Bucket\n      DeletionPolicy: Retain\n      Properties:\n        BucketName: trading-data-${self:provider.stage}\n\n    TradingDatabase:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: trading-table-${self:provider.stage}\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: S\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n        BillingMode: PAY_PER_REQUEST\n\nplugins:\n  - serverless-python-requirements\n  - serverless-step-functions\n\nstepFunctions:\n  stateMachines:\n    tradingWorkflow:\n      definition:\n        StartAt: FetchMarketData\n        States:\n          FetchMarketData:\n            Type: Task\n            Resource:\n              Fn::GetAtt: [ProcessMarketDataLambdaFunction, Arn]\n            Next: ExecuteTradeStrategy\n          ExecuteTradeStrategy:\n            Type: Task\n            Resource:\n              Fn::GetAtt: [ExecuteTradeStrategyLambdaFunction, Arn]\n            Next: AnalyzePerformance\n          AnalyzePerformance:\n            Type: Task\n            Resource:\n              Fn::GetAtt: [AnalyzePerformanceLambdaFunction, Arn]\n            End: true",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": {
      "message": "An error occurred: TradingDataBucket - Resource handler returned message: \"trading-data-dev already exists (Service: S3, Status Code: 0, Request ID: null)\" (RequestToken: 2c6e02ce-0738-3e25-ef25-2691dd3488ab, HandlerErrorCode: AlreadyExists).",
      "stack": "ServerlessError2: An error occurred: TradingDataBucket - Resource handler returned message: \"trading-data-dev already exists (Service: S3, Status Code: 0, Request ID: null)\" (RequestToken: 2c6e02ce-0738-3e25-ef25-2691dd3488ab, HandlerErrorCode: AlreadyExists).\n    at file:///home/codespace/.serverless/releases/4.1.21/package/dist/sf-core.js:698:830\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async AwsDeploy.update (file:///home/codespace/.serverless/releases/4.1.21/package/dist/sf-core.js:698:25421)\n    at async aws:deploy:deploy:updateStack (file:///home/codespace/.serverless/releases/4.1.21/package/dist/sf-core.js:709:5467)\n    at async PluginManager.runHooks (file:///home/codespace/.serverless/releases/4.1.21/package/dist/sf-core.js:895:9309)\n    at async PluginManager.invoke (file:///home/codespace/.serverless/releases/4.1.21/package/dist/sf-core.js:895:10080)\n    at async PluginManager.spawn (file:///home/codespace/.serverless/releases/4.1.21/package/dist/sf-core.js:895:10441)\n    at async PluginManager.runHooks (file:///home/codespace/.serverless/releases/4.1.21/package/dist/sf-core.js:895:9309)\n    at async PluginManager.invoke (file:///home/codespace/.serverless/releases/4.1.21/package/dist/sf-core.js:895:10080)\n    at async PluginManager.run (file:///home/codespace/.serverless/releases/4.1.21/package/dist/sf-core.js:895:10811)\n    at async Serverless.run (file:///home/codespace/.serverless/releases/4.1.21/package/dist/sf-core.js:902:10463)\n    at async runFramework (file:///home/codespace/.serverless/releases/4.1.21/package/dist/sf-core.js:950:2314)\n    at async route (file:///home/codespace/.serverless/releases/4.1.21/package/dist/sf-core.js:961:16356)\n    at async Object.run2 [as run] (file:///home/codespace/.serverless/releases/4.1.21/package/dist/sf-core.js:961:16754)\n    at async run3 (file:///home/codespace/.serverless/releases/4.1.21/package/dist/sf-core.js:961:18014)",
      "code": "AWS_CLOUD_FORMATION_UPDATE_STACK_INTERNAL_S3_BUCKET_CREATE_FAILED"
    },
    "params": {},
    "machineId": "689c1335ba17bfc78320d7cc6e057d4b",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "c1aee79b-3588-4cc1-a20d-f7b2d6174ebf",
    "orgName": "adamscott",
    "userId": "9Z7p04yLH6fSZK70xh",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": true,
        "monitoring": true
      },
      "orgObservabilityIntegrations": [
        {
          "integrationId": "ue6Mbab13w5cAU8VDqFYGU",
          "awsAccountId": "211110009231",
          "status": "alive"
        }
      ],
      "serviceAppId": "wVsCDp3HZwk4B9389m",
      "serviceProvider": {
        "accessKeyId": "<REDACTED>",
        "secretAccessKey": "<REDACTED>",
        "sessionToken": "<REDACTED>"
      },
      "instanceParameters": null
    },
    "userName": "adamscott",
    "subscription": null,
    "userEmail": "adam404@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "211110009231",
    "versionSf": "4.1.21",
    "serviceProviderAwsCfStackName": "trading-platform-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:211110009231:stack/trading-platform-dev/844ae400-5777-11ef-b884-12d82d53a20f",
    "serviceProviderAwsCfStackCreated": "2024-08-11T00:20:30.461Z",
    "serviceProviderAwsCfStackUpdated": "2024-08-11T01:45:10.818Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_IN_PROGRESS",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "trading-platform-dev-serverlessdeploymentbucket-c1ape3eduvef"
      }
    ]
  }
}
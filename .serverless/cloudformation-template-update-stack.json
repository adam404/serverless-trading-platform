{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "ProcessMarketDataLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/trading-platform-dev-processMarketData"
      }
    },
    "ExecuteTradeStrategyLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/trading-platform-dev-executeTradeStrategy"
      }
    },
    "AnalyzePerformanceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/trading-platform-dev-analyzePerformance"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "trading-platform",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/trading-platform-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/trading-platform-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "trading-platform",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "ProcessMarketDataLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/trading-platform/dev/1723340708262-2024-08-11T01:45:08.262Z/trading-platform.zip"
        },
        "Handler": "src.handlers.market_data.process",
        "Runtime": "python3.8",
        "FunctionName": "trading-platform-dev-processMarketData",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ProcessMarketDataLogGroup"
      ]
    },
    "ExecuteTradeStrategyLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/trading-platform/dev/1723340708262-2024-08-11T01:45:08.262Z/trading-platform.zip"
        },
        "Handler": "src.handlers.trade.execute",
        "Runtime": "python3.8",
        "FunctionName": "trading-platform-dev-executeTradeStrategy",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ExecuteTradeStrategyLogGroup"
      ]
    },
    "AnalyzePerformanceLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/trading-platform/dev/1723340708262-2024-08-11T01:45:08.262Z/trading-platform.zip"
        },
        "Handler": "src.handlers.analysis.perform",
        "Runtime": "python3.8",
        "FunctionName": "trading-platform-dev-analyzePerformance",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AnalyzePerformanceLogGroup"
      ]
    },
    "ProcessMarketDataLambdaVersion09sOawg2hra15sWpvdFmhJyTZlHte161cZr0U9Arb0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ProcessMarketDataLambdaFunction"
        },
        "CodeSha256": "HxNlepOVLrLAuUgsZe9jsWGqk0QYtmGBjrELdZNd9CE="
      }
    },
    "ExecuteTradeStrategyLambdaVersionKWST46QsjBWeIcYyl6Tfshwd6Cs8vqWfLLtEL8h6UrE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ExecuteTradeStrategyLambdaFunction"
        },
        "CodeSha256": "HxNlepOVLrLAuUgsZe9jsWGqk0QYtmGBjrELdZNd9CE="
      }
    },
    "AnalyzePerformanceLambdaVersionDlteR2fztEEIf4NyzPmNx7sfLvA3lSYM8JEB31KCg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AnalyzePerformanceLambdaFunction"
        },
        "CodeSha256": "HxNlepOVLrLAuUgsZe9jsWGqk0QYtmGBjrELdZNd9CE="
      }
    },
    "TradingWorkflowStepFunctionsStateMachineRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Sub": "states.${AWS::Region}.amazonaws.com"
                }
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "dev-trading-platform-statemachine",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "ProcessMarketDataLambdaFunction",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "${functionArn}:*",
                        {
                          "functionArn": {
                            "Fn::GetAtt": [
                              "ProcessMarketDataLambdaFunction",
                              "Arn"
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "ExecuteTradeStrategyLambdaFunction",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "${functionArn}:*",
                        {
                          "functionArn": {
                            "Fn::GetAtt": [
                              "ExecuteTradeStrategyLambdaFunction",
                              "Arn"
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "AnalyzePerformanceLambdaFunction",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "${functionArn}:*",
                        {
                          "functionArn": {
                            "Fn::GetAtt": [
                              "AnalyzePerformanceLambdaFunction",
                              "Arn"
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "TradingWorkflowStepFunctionsStateMachine": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": {
          "Fn::Sub": [
            "{\n  \"StartAt\": \"FetchMarketData\",\n  \"States\": {\n    \"FetchMarketData\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${bcc3523367a36d53d2294c8059de22d3}\",\n      \"Next\": \"ExecuteTradeStrategy\"\n    },\n    \"ExecuteTradeStrategy\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${2cc4e800550f0f2f2233e8ecc5d05700}\",\n      \"Next\": \"AnalyzePerformance\"\n    },\n    \"AnalyzePerformance\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${a3769abb442ae325c5658db4ccdd3681}\",\n      \"End\": true\n    }\n  }\n}",
            {
              "bcc3523367a36d53d2294c8059de22d3": {
                "Fn::GetAtt": [
                  "ProcessMarketDataLambdaFunction",
                  "Arn"
                ]
              },
              "2cc4e800550f0f2f2233e8ecc5d05700": {
                "Fn::GetAtt": [
                  "ExecuteTradeStrategyLambdaFunction",
                  "Arn"
                ]
              },
              "a3769abb442ae325c5658db4ccdd3681": {
                "Fn::GetAtt": [
                  "AnalyzePerformanceLambdaFunction",
                  "Arn"
                ]
              }
            }
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "TradingWorkflowStepFunctionsStateMachineRole",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "TradingWorkflowStepFunctionsStateMachineRole"
      ]
    },
    "ProcessMarketDataEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ProcessMarketDataLambdaFunction",
                "Arn"
              ]
            },
            "Id": "processMarketDataSchedule"
          }
        ]
      }
    },
    "ProcessMarketDataLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ProcessMarketDataLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ProcessMarketDataEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "S3BucketTradingdatadev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "trading-data-dev",
        "NotificationConfiguration": {
          "LambdaConfigurations": [
            {
              "Event": "s3:ObjectCreated:*",
              "Function": {
                "Fn::GetAtt": [
                  "AnalyzePerformanceLambdaFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      },
      "DependsOn": [
        "AnalyzePerformanceLambdaPermissionTradingdatadevS3"
      ]
    },
    "AnalyzePerformanceLambdaPermissionTradingdatadevS3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AnalyzePerformanceLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "s3.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":s3:::trading-data-dev"
            ]
          ]
        },
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-trading-platform",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceTrade": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "trade",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodTradePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceTrade"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ExecuteTradeStrategyLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ExecuteTradeStrategyLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1723340657190": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodTradePost"
      ]
    },
    "ExecuteTradeStrategyLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ExecuteTradeStrategyLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "TradingDataBucket": {
      "Type": "AWS::S3::Bucket",
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketName": "trading-data-dev"
      }
    },
    "TradingDatabase": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "trading-table-dev",
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-trading-platform-dev-ServerlessDeploymentBucketName"
      }
    },
    "ProcessMarketDataLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ProcessMarketDataLambdaVersion09sOawg2hra15sWpvdFmhJyTZlHte161cZr0U9Arb0"
      },
      "Export": {
        "Name": "sls-trading-platform-dev-ProcessMarketDataLambdaFunctionQualifiedArn"
      }
    },
    "ExecuteTradeStrategyLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ExecuteTradeStrategyLambdaVersionKWST46QsjBWeIcYyl6Tfshwd6Cs8vqWfLLtEL8h6UrE"
      },
      "Export": {
        "Name": "sls-trading-platform-dev-ExecuteTradeStrategyLambdaFunctionQualifiedArn"
      }
    },
    "AnalyzePerformanceLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AnalyzePerformanceLambdaVersionDlteR2fztEEIf4NyzPmNx7sfLvA3lSYM8JEB31KCg"
      },
      "Export": {
        "Name": "sls-trading-platform-dev-AnalyzePerformanceLambdaFunctionQualifiedArn"
      }
    },
    "TradingWorkflowStepFunctionsStateMachineArn": {
      "Description": "Current StateMachine Arn",
      "Value": {
        "Ref": "TradingWorkflowStepFunctionsStateMachine"
      },
      "Export": {
        "Name": "sls-trading-platform-dev-TradingWorkflowStepFunctionsStateMachineArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-trading-platform-dev-ServiceEndpoint"
      }
    }
  }
}